<?xml version="1.0" encoding="utf-8"?>

<!--
Ant script for jaxb creation.

## Legal stuff

Copyright 2016-2017 Ekkart Kleinod <ekleinod@edgesoft.de>

This file is part of refereemanager.

refereemanager is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

refereemanager is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with refereemanager.  If not, see <http://www.gnu.org/licenses/>.

@author Ekkart Kleinod
@version 0.14.0
@since 0.4.0
-->

<project name="refereemanager" default="help" basedir=".">

  <property name="edgeutils:ant" value="../../../../submodules/edgeutils/ant" />
  <property name="edgeutils:jaxb" value="../../../../submodules/edgeutils/jaxb" />
  <import file="${edgeutils:ant}/ant-commons.xml"/>
  <import file="${edgeutils:ant}/ant-jaxb.xml"/>

  <property name="refman:xsd" value="refereemanager.xsd" />
  <property name="refman:outpath" value="../java/" />
  <property name="refman:package" value="de.edgesoft.refereemanager.jaxb" />
  <property name="refman:packagepath" value="${refman:outpath}de/edgesoft/refereemanager/jaxb/" />
  <property name="refman:bindings1" value="${edgeutils:jaxb}/commons.xjb" />
  <property name="refman:bindings2" value="${edgeutils:jaxb}/commons-reuse.xjb" />
  <property name="refman:bindings3" value="refereemanager.xjb" />

  <target name="model" description="Removes, then generates the refman model classes from xsd.">

    <antcall target="deletemodel">
      <param name="del:path" value="${refman:packagepath}" />
    </antcall>

    <antcall target="callxjc">
      <param name="xjc:outpath" value="${refman:outpath}" />
      <param name="xjc:package" value="${refman:package}" />
      <param name="xjc:xsd" value="${refman:xsd}" />
      <param name="xjc:bindings1" value="${refman:bindings1}" />
      <param name="xjc:bindings2" value="${refman:bindings2}" />
      <param name="xjc:bindings3" value="${refman:bindings3}" />
    </antcall>

  </target>

  <target name="fixmodel" description="Fixes generation errors in model.">

    <echo message="Fixing ${refman:packagepath}Club.java." />

    <antcall target="fixannotationimport">
      <param name="modelclass" value="Club" />
    </antcall>
    <antcall target="fixannotationline">
      <param name="modelclass" value="Club" />
      <param name="element" value="venue" />
    </antcall>
    <antcall target="fixannotationline">
      <param name="modelclass" value="Club" />
      <param name="element" value="contact_person" />
    </antcall>
    <antcall target="fixcomment">
      <param name="modelclass" value="Club" />
    </antcall>

    <echo message="Fixing ${refman:packagepath}ObjectFactory.java." />

    <antcall target="fixfactorymethod">
      <param name="modelclass" value="Club" />
      <param name="element" value="venue" />
      <param name="elementclass" value="Venue" />
    </antcall>
    <antcall target="fixfactorymethod">
      <param name="modelclass" value="Club" />
      <param name="element" value="contact_person" />
      <param name="elementclass" value="ContactPerson" />
    </antcall>

  </target>

  <target name="fixannotationimport">

    <replace
        encoding="utf-8"
        file="${refman:packagepath}${modelclass}.java"
        failOnNoReplacements="true"
    >
<replacetoken expandProperties="true"><![CDATA[import javax.xml.bind.annotation.XmlElementRef;]]></replacetoken>
<replacevalue expandProperties="true"><![CDATA[// fixing wrong JAXB generation of referenced lists
// before: import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlIDREF;
// end of fix]]></replacevalue>
    </replace>

  </target>

  <target name="fixannotationline">

    <replace
        encoding="utf-8"
        file="${refman:packagepath}${modelclass}.java"
        failOnNoReplacements="true"
    >
<replacetoken expandProperties="true"><![CDATA[    @XmlElementRef(name = "${element}", type = JAXBElement.class, required = false)]]></replacetoken>
<replacevalue expandProperties="true"><![CDATA[    // fixing wrong JAXB generation of referenced lists
    // before: @XmlElementRef(name = "${element}", type = JAXBElement.class, required = false)
    @XmlElement(name = "${element}", type = Object.class)
    @XmlIDREF
    @XmlSchemaType(name = "IDREF")
    // end of fix]]></replacevalue>
    </replace>

  </target>

  <target name="fixcomment">

    <replace
        encoding="utf-8"
        file="${refman:packagepath}${modelclass}.java"
        failOnNoReplacements="true"
    >
<replacetoken expandProperties="true"><![CDATA[     * {@link JAXBElement }{@code <}{@link Object }{@code >}]]></replacetoken>
<replacevalue expandProperties="true"><![CDATA[     * // fixing wrong JAXB generation of referenced lists
     * // before: {@link JAXBElement }{@code <}{@link Object }{@code >}
     * {@link Object }
     * // end of fix]]></replacevalue>
    </replace>

  </target>

  <target name="fixfactorymethod">

    <replace
        encoding="utf-8"
        file="${refman:packagepath}ObjectFactory.java"
        failOnNoReplacements="true"
    >
<replacetoken expandProperties="true"><![CDATA[    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "${element}", scope = ${modelclass}.class)
    @XmlIDREF
    public JAXBElement<Object> create${modelclass}${elementclass}(Object value) {
        return new JAXBElement<Object>(_Team${elementclass}_QNAME, Object.class, ${modelclass}.class, value);
    }]]></replacetoken>
<replacevalue expandProperties="true"><![CDATA[     // fixing wrong JAXB generation of referenced lists
     // removed method: public JAXBElement<Object> create${modelclass}${elementclass}(Object value)
     // end of fix]]></replacevalue>
    </replace>

  </target>

</project>
