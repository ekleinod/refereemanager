<?xml version="1.0" encoding="utf-8"?>

<!--
Ant script for jaxb creation.

**Important:** save with spaces, not tabs.

## Legal stuff

Copyright 2016-2017 Ekkart Kleinod <ekleinod@edgesoft.de>

This file is part of refereemanager.

refereemanager is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

refereemanager is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with refereemanager.  If not, see <http://www.gnu.org/licenses/>.

@author Ekkart Kleinod
@version 0.14.0
@since 0.4.0
-->

<project name="refereemanager" default="help" basedir=".">

	<property name="edgeutils:ant" value="../../../../submodules/edgeutils/ant" />
	<property name="edgeutils:jaxb" value="../../../../submodules/edgeutils/jaxb" />
	<import file="${edgeutils:ant}/ant-commons.xml"/>
	<import file="${edgeutils:ant}/ant-jaxb.xml"/>

	<property name="refman:xsd" value="refereemanager.xsd" />
	<property name="refman:outpath" value="../java/" />
	<property name="refman:package" value="de.edgesoft.refereemanager.jaxb" />
	<property name="refman:packagepath" value="${refman:outpath}de/edgesoft/refereemanager/jaxb/" />
	<property name="refman:bindings1" value="${edgeutils:jaxb}/commons.xjb" />
	<property name="refman:bindings2" value="${edgeutils:jaxb}/commons-reuse.xjb" />
	<property name="refman:bindings3" value="refereemanager.xjb" />

	<target name="model" description="Removes, then generates the refman model classes from xsd.">

		<antcall target="deletemodel">
			<param name="del:path" value="${refman:packagepath}" />
		</antcall>

		<antcall target="callxjc">
			<param name="xjc:outpath" value="${refman:outpath}" />
			<param name="xjc:package" value="${refman:package}" />
			<param name="xjc:xsd" value="${refman:xsd}" />
			<param name="xjc:bindings1" value="${refman:bindings1}" />
			<param name="xjc:bindings2" value="${refman:bindings2}" />
			<param name="xjc:bindings3" value="${refman:bindings3}" />
		</antcall>

		<!--antcall target="fixmodel" /-->

	</target>

	<target name="fixmodel" description="Fixes generation errors in model.">

		<echo message="Fixing model." />

		<antcall target="fixannotationimport">
			<param name="modelclass" value="Club" />
		</antcall>
		<antcall target="fixclass">
			<param name="modelclass" value="Club" />
			<param name="element" value="venue" />
			<param name="elementcamel" value="Venue" />
			<param name="elementclass" value="Venue" />
		</antcall>
		<antcall target="fixclass">
			<param name="modelclass" value="Club" />
			<param name="element" value="contact_person" />
			<param name="elementcamel" value="ContactPerson" />
			<param name="elementclass" value="Person" />
		</antcall>

		<antcall target="fixannotationimport">
			<param name="modelclass" value="League" />
		</antcall>
		<antcall target="fixclass">
			<param name="modelclass" value="League" />
			<param name="element" value="referee_report_recipient" />
			<param name="elementcamel" value="RefereeReportRecipient" />
			<param name="elementclass" value="PersonReference" />
		</antcall>

	</target>



	<target name="fixclass">

		<echo message="Fixing class ${modelclass}.java with element ${elementclass}." />

		<antcall target="fixcomment">
			<param name="modelclass" value="${modelclass}" />
			<param name="elementclass" value="${elementclass}" />
		</antcall>
		<antcall target="fixcomment">
			<param name="modelclass" value="${modelclass}" />
			<param name="elementclass" value="${elementclass}" />
		</antcall>
		<antcall target="fixannotationline">
			<param name="modelclass" value="${modelclass}" />
			<param name="element" value="${element}" />
		</antcall>
		<antcall target="fixannotationline">
			<param name="modelclass" value="${modelclass}" />
			<param name="element" value="${element}" />
		</antcall>

		<echo message="Fixing ObjectFactory.java regarding ${modelclass} and ${elementcamel}." />

		<antcall target="fixfactorymethod">
			<param name="modelclass" value="${modelclass}" />
			<param name="element" value="${element}" />
			<param name="elementcamel" value="${elementcamel}" />
		</antcall>
		<antcall target="fixfactorymethod">
			<param name="modelclass" value="${modelclass}" />
			<param name="element" value="${element}" />
			<param name="elementcamel" value="${elementcamel}" />
		</antcall>

	</target>



	<target name="fixannotationimport">

		<replaceregexp
				encoding="utf-8"
				file="${refman:packagepath}${modelclass}.java"
				flags="g"

				match="(import javax\.xml\.bind\.annotation\.XmlElementRef;)\n"

				replace="// fixing wrong JAXB generation of referenced lists${line.separator}// before: \1${line.separator}import javax\.xml\.bind\.annotation\.XmlIDREF;${line.separator}// end of fix${line.separator}"

		/>

	</target>



	<target name="fixannotationline">

		<replaceregexp
				encoding="utf-8"
				file="${refman:packagepath}${modelclass}.java"
				flags="g"

				match="\s{4}(@XmlElementRef\(name = &quot;${element}&quot;, type = JAXBElement\.class.*\))\n"

				replace="    // fixing wrong JAXB generation of referenced lists${line.separator}    // before: \1${line.separator}    @XmlElement\(name = &quot;${element}&quot;, type = Object\.class\)${line.separator}    @XmlIDREF${line.separator}    @XmlSchemaType\(name = &quot;IDREF&quot;\)${line.separator}    // end of fix${line.separator}"

		/>

	</target>



	<target name="fixcomment">

		<replaceregexp
				encoding="utf-8"
				file="${refman:packagepath}${modelclass}.java"
				flags="g"

				match="\s{5}\* (\{@link JAXBElement \}\{@code &lt;\}\{@link Object \}\{@code &gt;\})\n\s{5}\* \n\s{5}\* \n(\s{5}\*/\n\s{4}public List&lt;${elementclass}&gt;)"

				replace="     \* - fixing wrong JAXB generation of referenced lists${line.separator}     \* - before: \1${line.separator}     \* \{@link ${elementclass} \}${line.separator}     \* - end of fix${line.separator}\2"

		/>

	</target>



	<target name="fixfactorymethod">

		<replaceregexp
				encoding="utf-8"
				file="${refman:packagepath}ObjectFactory.java"
				flags="g"

				match="\s{4}/\*{2}\n\s{5}\* Create an instance of \{@link JAXBElement \}\{@code &lt;\}\{@link Object \}\{@code &gt;\}\}\n\s{5}\* \n\s{5}\*/\n\s{4}@XmlElementDecl\(namespace = &quot;&quot;, name = &quot;${element}&quot;, scope = ${modelclass}\.class\)\n\s{4}@XmlIDREF\n\s{4}(public JAXBElement&lt;Object&gt; create${modelclass}${elementcamel}\(Object value\)) \{\n\s{8}return new JAXBElement&lt;Object&gt;\(\_${modelclass}${elementcamel}\_QNAME, Object\.class, ${modelclass}\.class, value\);\n\s{4}\}\n"

				replace="    // fixing wrong JAXB generation of referenced lists${line.separator}    // removed method: \1${line.separator}    // end of fix${line.separator}"

		/>

	</target>

</project>
