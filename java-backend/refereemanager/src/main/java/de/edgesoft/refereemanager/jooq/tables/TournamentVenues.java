/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.TournamentVenuesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Venues of tournaments.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentVenues extends TableImpl<TournamentVenuesRecord> {

    private static final long serialVersionUID = 1067728999;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_tournament_venues</code>
     */
    public static final TournamentVenues TOURNAMENT_VENUES = new TournamentVenues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TournamentVenuesRecord> getRecordType() {
        return TournamentVenuesRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_tournament_venues.id</code>.
     */
    public final TableField<TournamentVenuesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournament_venues.tournament_id</code>.
     */
    public final TableField<TournamentVenuesRecord, UInteger> TOURNAMENT_ID = createField("tournament_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournament_venues.contact_id</code>.
     */
    public final TableField<TournamentVenuesRecord, UInteger> CONTACT_ID = createField("contact_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_tournament_venues</code> table reference
     */
    public TournamentVenues() {
        this("rfrmgr_tournament_venues", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_tournament_venues</code> table reference
     */
    public TournamentVenues(String alias) {
        this(alias, TOURNAMENT_VENUES);
    }

    private TournamentVenues(String alias, Table<TournamentVenuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TournamentVenues(String alias, Table<TournamentVenuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Venues of tournaments.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TournamentVenuesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_TOURNAMENT_VENUES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TournamentVenuesRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_TOURNAMENT_VENUES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TournamentVenuesRecord>> getKeys() {
        return Arrays.<UniqueKey<TournamentVenuesRecord>>asList(Keys.KEY_RFRMGR_TOURNAMENT_VENUES_PRIMARY, Keys.KEY_RFRMGR_TOURNAMENT_VENUES_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TournamentVenuesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TournamentVenuesRecord, ?>>asList(Keys.FK_RFRMGR_TEAM_VENUES_COPY1_RFRMGR_TOURNAMENTS1, Keys.FK_RFRMGR_VENUES_RFRMGR_CONTACTS10);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TournamentVenues as(String alias) {
        return new TournamentVenues(alias, this);
    }

    /**
     * Rename this table
     */
    public TournamentVenues rename(String name) {
        return new TournamentVenues(name, null);
    }
}
