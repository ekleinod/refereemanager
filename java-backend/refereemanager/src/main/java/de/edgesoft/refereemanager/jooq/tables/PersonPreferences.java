/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.PersonPreferencesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Preferences for a person.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonPreferences extends TableImpl<PersonPreferencesRecord> {

    private static final long serialVersionUID = -1110047301;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_person_preferences</code>
     */
    public static final PersonPreferences PERSON_PREFERENCES = new PersonPreferences();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonPreferencesRecord> getRecordType() {
        return PersonPreferencesRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_person_preferences.id</code>.
     */
    public final TableField<PersonPreferencesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_person_preferences.person_id</code>.
     */
    public final TableField<PersonPreferencesRecord, UInteger> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_person_preferences.language</code>.
     */
    public final TableField<PersonPreferencesRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_person_preferences.assignment_notification_interval</code>.
     */
    public final TableField<PersonPreferencesRecord, Integer> ASSIGNMENT_NOTIFICATION_INTERVAL = createField("assignment_notification_interval", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_person_preferences</code> table reference
     */
    public PersonPreferences() {
        this("rfrmgr_person_preferences", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_person_preferences</code> table reference
     */
    public PersonPreferences(String alias) {
        this(alias, PERSON_PREFERENCES);
    }

    private PersonPreferences(String alias, Table<PersonPreferencesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonPreferences(String alias, Table<PersonPreferencesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Preferences for a person.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PersonPreferencesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_PERSON_PREFERENCES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonPreferencesRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_PERSON_PREFERENCES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonPreferencesRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonPreferencesRecord>>asList(Keys.KEY_RFRMGR_PERSON_PREFERENCES_PRIMARY, Keys.KEY_RFRMGR_PERSON_PREFERENCES_ID_UNIQUE, Keys.KEY_RFRMGR_PERSON_PREFERENCES_SID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonPreferencesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonPreferencesRecord, ?>>asList(Keys.FK_RFRMGR_PREFERENCES_RFRMGR_PEOPLE1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonPreferences as(String alias) {
        return new PersonPreferences(alias, this);
    }

    /**
     * Rename this table
     */
    public PersonPreferences rename(String name) {
        return new PersonPreferences(name, null);
    }
}
