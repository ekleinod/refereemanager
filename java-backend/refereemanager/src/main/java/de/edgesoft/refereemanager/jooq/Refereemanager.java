/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq;


import de.edgesoft.refereemanager.jooq.tables.ActivityLogs;
import de.edgesoft.refereemanager.jooq.tables.Addresses;
import de.edgesoft.refereemanager.jooq.tables.Assignments;
import de.edgesoft.refereemanager.jooq.tables.Clubs;
import de.edgesoft.refereemanager.jooq.tables.ContactTypes;
import de.edgesoft.refereemanager.jooq.tables.Contacts;
import de.edgesoft.refereemanager.jooq.tables.DatabaseColumns;
import de.edgesoft.refereemanager.jooq.tables.DatabaseTables;
import de.edgesoft.refereemanager.jooq.tables.Emails;
import de.edgesoft.refereemanager.jooq.tables.LeagueGameTeamTypes;
import de.edgesoft.refereemanager.jooq.tables.LeagueGameTeams;
import de.edgesoft.refereemanager.jooq.tables.LeagueGames;
import de.edgesoft.refereemanager.jooq.tables.LeaguePlannedReferees;
import de.edgesoft.refereemanager.jooq.tables.LeagueTypes;
import de.edgesoft.refereemanager.jooq.tables.Leagues;
import de.edgesoft.refereemanager.jooq.tables.People;
import de.edgesoft.refereemanager.jooq.tables.PersonPreferences;
import de.edgesoft.refereemanager.jooq.tables.PhoneNumbers;
import de.edgesoft.refereemanager.jooq.tables.Pictures;
import de.edgesoft.refereemanager.jooq.tables.RefereeAssignmentRemarkTypes;
import de.edgesoft.refereemanager.jooq.tables.RefereeAssignmentStatusTypes;
import de.edgesoft.refereemanager.jooq.tables.RefereeAssignmentTypes;
import de.edgesoft.refereemanager.jooq.tables.RefereeAssignments;
import de.edgesoft.refereemanager.jooq.tables.RefereeRelationTypes;
import de.edgesoft.refereemanager.jooq.tables.RefereeRelations;
import de.edgesoft.refereemanager.jooq.tables.RefereeReportRecipients;
import de.edgesoft.refereemanager.jooq.tables.RefereeReports;
import de.edgesoft.refereemanager.jooq.tables.RefereeStatuses;
import de.edgesoft.refereemanager.jooq.tables.Referees;
import de.edgesoft.refereemanager.jooq.tables.Seasons;
import de.edgesoft.refereemanager.jooq.tables.SexTypes;
import de.edgesoft.refereemanager.jooq.tables.Spokespeople;
import de.edgesoft.refereemanager.jooq.tables.StatusTypes;
import de.edgesoft.refereemanager.jooq.tables.TeamSeasons;
import de.edgesoft.refereemanager.jooq.tables.TeamVenues;
import de.edgesoft.refereemanager.jooq.tables.Teams;
import de.edgesoft.refereemanager.jooq.tables.TournamentGames;
import de.edgesoft.refereemanager.jooq.tables.TournamentVenues;
import de.edgesoft.refereemanager.jooq.tables.Tournaments;
import de.edgesoft.refereemanager.jooq.tables.TrainingLevelTypes;
import de.edgesoft.refereemanager.jooq.tables.TrainingLevels;
import de.edgesoft.refereemanager.jooq.tables.TrainingUpdates;
import de.edgesoft.refereemanager.jooq.tables.Urls;
import de.edgesoft.refereemanager.jooq.tables.UserRoles;
import de.edgesoft.refereemanager.jooq.tables.Users;
import de.edgesoft.refereemanager.jooq.tables.WishTypes;
import de.edgesoft.refereemanager.jooq.tables.Wishes;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Refereemanager extends SchemaImpl {

    private static final long serialVersionUID = 335805581;

    /**
     * The reference instance of <code>refereemanager</code>
     */
    public static final Refereemanager REFEREEMANAGER = new Refereemanager();

    /**
     * Activity log of selected data tables. Only those tables are  / * comment truncated * / / *logged that are important to the user.* /
     */
    public final ActivityLogs RFRMGR_ACTIVITY_LOGS = de.edgesoft.refereemanager.jooq.tables.ActivityLogs.RFRMGR_ACTIVITY_LOGS;

    /**
     * All addresses.
     */
    public final Addresses RFRMGR_ADDRESSES = de.edgesoft.refereemanager.jooq.tables.Addresses.RFRMGR_ADDRESSES;

    /**
     * Assignments.
     */
    public final Assignments RFRMGR_ASSIGNMENTS = de.edgesoft.refereemanager.jooq.tables.Assignments.RFRMGR_ASSIGNMENTS;

    /**
     * All clubs.
     */
    public final Clubs RFRMGR_CLUBS = de.edgesoft.refereemanager.jooq.tables.Clubs.RFRMGR_CLUBS;

    /**
     * Base table for contacts. Specialized to email, phone etc.
     */
    public final Contacts RFRMGR_CONTACTS = de.edgesoft.refereemanager.jooq.tables.Contacts.RFRMGR_CONTACTS;

    /**
     * Possible types of contacts, such as private, working.
     */
    public final ContactTypes RFRMGR_CONTACT_TYPES = de.edgesoft.refereemanager.jooq.tables.ContactTypes.RFRMGR_CONTACT_TYPES;

    /**
     * All database columns that have to be logged,
     */
    public final DatabaseColumns RFRMGR_DATABASE_COLUMNS = de.edgesoft.refereemanager.jooq.tables.DatabaseColumns.RFRMGR_DATABASE_COLUMNS;

    /**
     * All database tables that have to be logged,
     */
    public final DatabaseTables RFRMGR_DATABASE_TABLES = de.edgesoft.refereemanager.jooq.tables.DatabaseTables.RFRMGR_DATABASE_TABLES;

    /**
     * All email adresses.
     */
    public final Emails RFRMGR_EMAILS = de.edgesoft.refereemanager.jooq.tables.Emails.RFRMGR_EMAILS;

    /**
     * All leagues.
     */
    public final Leagues RFRMGR_LEAGUES = de.edgesoft.refereemanager.jooq.tables.Leagues.RFRMGR_LEAGUES;

    /**
     * Assignments for league games.
League and season can be deduc / * comment truncated * / / *ed from the associated teams, they are stored because no team could be specified or teams of different seasons/leagues (e.g. relegation games).* /
     */
    public final LeagueGames RFRMGR_LEAGUE_GAMES = de.edgesoft.refereemanager.jooq.tables.LeagueGames.RFRMGR_LEAGUE_GAMES;

    /**
     * Teams of a league game and their role: home or off team.
     */
    public final LeagueGameTeams RFRMGR_LEAGUE_GAME_TEAMS = de.edgesoft.refereemanager.jooq.tables.LeagueGameTeams.RFRMGR_LEAGUE_GAME_TEAMS;

    /**
     * Types of league game teams, such as home team, off team, etc / * comment truncated * / / *.* /
     */
    public final LeagueGameTeamTypes RFRMGR_LEAGUE_GAME_TEAM_TYPES = de.edgesoft.refereemanager.jooq.tables.LeagueGameTeamTypes.RFRMGR_LEAGUE_GAME_TEAM_TYPES;

    /**
     * Planned numbers of referees by assignment type.
     */
    public final LeaguePlannedReferees RFRMGR_LEAGUE_PLANNED_REFEREES = de.edgesoft.refereemanager.jooq.tables.LeaguePlannedReferees.RFRMGR_LEAGUE_PLANNED_REFEREES;

    /**
     * All league types.
     */
    public final LeagueTypes RFRMGR_LEAGUE_TYPES = de.edgesoft.refereemanager.jooq.tables.LeagueTypes.RFRMGR_LEAGUE_TYPES;

    /**
     * Alle people go here, specializations, such as referees, have / * comment truncated * / / * their own table.* /
     */
    public final People RFRMGR_PEOPLE = de.edgesoft.refereemanager.jooq.tables.People.RFRMGR_PEOPLE;

    /**
     * Preferences for a person.
     */
    public final PersonPreferences RFRMGR_PERSON_PREFERENCES = de.edgesoft.refereemanager.jooq.tables.PersonPreferences.RFRMGR_PERSON_PREFERENCES;

    /**
     * All phone numbers.
     */
    public final PhoneNumbers RFRMGR_PHONE_NUMBERS = de.edgesoft.refereemanager.jooq.tables.PhoneNumbers.RFRMGR_PHONE_NUMBERS;

    /**
     * Picture storage (link to pictures, not the pics themselves.
     */
    public final Pictures RFRMGR_PICTURES = de.edgesoft.refereemanager.jooq.tables.Pictures.RFRMGR_PICTURES;

    /**
     * Storage of all referees.
     */
    public final Referees RFRMGR_REFEREES = de.edgesoft.refereemanager.jooq.tables.Referees.RFRMGR_REFEREES;

    /**
     * Referee's assignments with their role.
     */
    public final RefereeAssignments RFRMGR_REFEREE_ASSIGNMENTS = de.edgesoft.refereemanager.jooq.tables.RefereeAssignments.RFRMGR_REFEREE_ASSIGNMENTS;

    /**
     * Types of assignment remarks such as answering machine, call  / * comment truncated * / / *back.* /
     */
    public final RefereeAssignmentRemarkTypes RFRMGR_REFEREE_ASSIGNMENT_REMARK_TYPES = de.edgesoft.refereemanager.jooq.tables.RefereeAssignmentRemarkTypes.RFRMGR_REFEREE_ASSIGNMENT_REMARK_TYPES;

    /**
     * Possible assignment status of a referee (yes, no, maybe). Mo / * comment truncated * / / *stly relevant for tournament games.* /
     */
    public final RefereeAssignmentStatusTypes RFRMGR_REFEREE_ASSIGNMENT_STATUS_TYPES = de.edgesoft.refereemanager.jooq.tables.RefereeAssignmentStatusTypes.RFRMGR_REFEREE_ASSIGNMENT_STATUS_TYPES;

    /**
     * Possible types of referee's assignments such as umpire, stan / * comment truncated * / / *dby umpire, referee, racket control.* /
     */
    public final RefereeAssignmentTypes RFRMGR_REFEREE_ASSIGNMENT_TYPES = de.edgesoft.refereemanager.jooq.tables.RefereeAssignmentTypes.RFRMGR_REFEREE_ASSIGNMENT_TYPES;

    /**
     * Relations between referees and clubs: member and/or reffor.
     */
    public final RefereeRelations RFRMGR_REFEREE_RELATIONS = de.edgesoft.refereemanager.jooq.tables.RefereeRelations.RFRMGR_REFEREE_RELATIONS;

    /**
     * Club relations of a referee: member, reffor.
     */
    public final RefereeRelationTypes RFRMGR_REFEREE_RELATION_TYPES = de.edgesoft.refereemanager.jooq.tables.RefereeRelationTypes.RFRMGR_REFEREE_RELATION_TYPES;

    /**
     * Recipients of umpire reports.
     */
    public final RefereeReports RFRMGR_REFEREE_REPORTS = de.edgesoft.refereemanager.jooq.tables.RefereeReports.RFRMGR_REFEREE_REPORTS;

    /**
     * All league types.
     */
    public final RefereeReportRecipients RFRMGR_REFEREE_REPORT_RECIPIENTS = de.edgesoft.refereemanager.jooq.tables.RefereeReportRecipients.RFRMGR_REFEREE_REPORT_RECIPIENTS;

    /**
     * Referee's status.
     */
    public final RefereeStatuses RFRMGR_REFEREE_STATUSES = de.edgesoft.refereemanager.jooq.tables.RefereeStatuses.RFRMGR_REFEREE_STATUSES;

    /**
     * All seasons.
     */
    public final Seasons RFRMGR_SEASONS = de.edgesoft.refereemanager.jooq.tables.Seasons.RFRMGR_SEASONS;

    /**
     * Lookup table for sexes.
     */
    public final SexTypes RFRMGR_SEX_TYPES = de.edgesoft.refereemanager.jooq.tables.SexTypes.RFRMGR_SEX_TYPES;

    /**
     * Spokespeople of teams and clubs.
     */
    public final Spokespeople RFRMGR_SPOKESPEOPLE = de.edgesoft.refereemanager.jooq.tables.Spokespeople.RFRMGR_SPOKESPEOPLE;

    /**
     * Possible referee statuses such as "interested in many assign / * comment truncated * / / *ments", "not active", etc.* /
     */
    public final StatusTypes RFRMGR_STATUS_TYPES = de.edgesoft.refereemanager.jooq.tables.StatusTypes.RFRMGR_STATUS_TYPES;

    /**
     * All teams.
     */
    public final Teams RFRMGR_TEAMS = de.edgesoft.refereemanager.jooq.tables.Teams.RFRMGR_TEAMS;

    /**
     * Association of teams in a specified season.
     */
    public final TeamSeasons RFRMGR_TEAM_SEASONS = de.edgesoft.refereemanager.jooq.tables.TeamSeasons.RFRMGR_TEAM_SEASONS;

    /**
     * Venues of teams in a season.
     */
    public final TeamVenues RFRMGR_TEAM_VENUES = de.edgesoft.refereemanager.jooq.tables.TeamVenues.RFRMGR_TEAM_VENUES;

    /**
     * Tournaments with games.
     */
    public final Tournaments RFRMGR_TOURNAMENTS = de.edgesoft.refereemanager.jooq.tables.Tournaments.RFRMGR_TOURNAMENTS;

    /**
     * Assignments for tournament games.
     */
    public final TournamentGames RFRMGR_TOURNAMENT_GAMES = de.edgesoft.refereemanager.jooq.tables.TournamentGames.RFRMGR_TOURNAMENT_GAMES;

    /**
     * Venues of tournaments.
     */
    public final TournamentVenues RFRMGR_TOURNAMENT_VENUES = de.edgesoft.refereemanager.jooq.tables.TournamentVenues.RFRMGR_TOURNAMENT_VENUES;

    /**
     * Achieved training levels for referees.
     */
    public final TrainingLevels RFRMGR_TRAINING_LEVELS = de.edgesoft.refereemanager.jooq.tables.TrainingLevels.RFRMGR_TRAINING_LEVELS;

    /**
     * Possible training levels such as international referee, Germ / * comment truncated * / / *an referee.* /
     */
    public final TrainingLevelTypes RFRMGR_TRAINING_LEVEL_TYPES = de.edgesoft.refereemanager.jooq.tables.TrainingLevelTypes.RFRMGR_TRAINING_LEVEL_TYPES;

    /**
     * Updates of the training levels.
     */
    public final TrainingUpdates RFRMGR_TRAINING_UPDATES = de.edgesoft.refereemanager.jooq.tables.TrainingUpdates.RFRMGR_TRAINING_UPDATES;

    /**
     * All urls.
     */
    public final Urls RFRMGR_URLS = de.edgesoft.refereemanager.jooq.tables.Urls.RFRMGR_URLS;

    /**
     * User table for access rights.
     */
    public final Users RFRMGR_USERS = de.edgesoft.refereemanager.jooq.tables.Users.RFRMGR_USERS;

    /**
     * Roles of users, such as admin, editor.
     */
    public final UserRoles RFRMGR_USER_ROLES = de.edgesoft.refereemanager.jooq.tables.UserRoles.RFRMGR_USER_ROLES;

    /**
     * Referees' wishes for their assignments.
     */
    public final Wishes RFRMGR_WISHES = de.edgesoft.refereemanager.jooq.tables.Wishes.RFRMGR_WISHES;

    /**
     * Wish types of a referee: prefer, avoid.
     */
    public final WishTypes RFRMGR_WISH_TYPES = de.edgesoft.refereemanager.jooq.tables.WishTypes.RFRMGR_WISH_TYPES;

    /**
     * No further instances allowed
     */
    private Refereemanager() {
        super("refereemanager", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            ActivityLogs.RFRMGR_ACTIVITY_LOGS,
            Addresses.RFRMGR_ADDRESSES,
            Assignments.RFRMGR_ASSIGNMENTS,
            Clubs.RFRMGR_CLUBS,
            Contacts.RFRMGR_CONTACTS,
            ContactTypes.RFRMGR_CONTACT_TYPES,
            DatabaseColumns.RFRMGR_DATABASE_COLUMNS,
            DatabaseTables.RFRMGR_DATABASE_TABLES,
            Emails.RFRMGR_EMAILS,
            Leagues.RFRMGR_LEAGUES,
            LeagueGames.RFRMGR_LEAGUE_GAMES,
            LeagueGameTeams.RFRMGR_LEAGUE_GAME_TEAMS,
            LeagueGameTeamTypes.RFRMGR_LEAGUE_GAME_TEAM_TYPES,
            LeaguePlannedReferees.RFRMGR_LEAGUE_PLANNED_REFEREES,
            LeagueTypes.RFRMGR_LEAGUE_TYPES,
            People.RFRMGR_PEOPLE,
            PersonPreferences.RFRMGR_PERSON_PREFERENCES,
            PhoneNumbers.RFRMGR_PHONE_NUMBERS,
            Pictures.RFRMGR_PICTURES,
            Referees.RFRMGR_REFEREES,
            RefereeAssignments.RFRMGR_REFEREE_ASSIGNMENTS,
            RefereeAssignmentRemarkTypes.RFRMGR_REFEREE_ASSIGNMENT_REMARK_TYPES,
            RefereeAssignmentStatusTypes.RFRMGR_REFEREE_ASSIGNMENT_STATUS_TYPES,
            RefereeAssignmentTypes.RFRMGR_REFEREE_ASSIGNMENT_TYPES,
            RefereeRelations.RFRMGR_REFEREE_RELATIONS,
            RefereeRelationTypes.RFRMGR_REFEREE_RELATION_TYPES,
            RefereeReports.RFRMGR_REFEREE_REPORTS,
            RefereeReportRecipients.RFRMGR_REFEREE_REPORT_RECIPIENTS,
            RefereeStatuses.RFRMGR_REFEREE_STATUSES,
            Seasons.RFRMGR_SEASONS,
            SexTypes.RFRMGR_SEX_TYPES,
            Spokespeople.RFRMGR_SPOKESPEOPLE,
            StatusTypes.RFRMGR_STATUS_TYPES,
            Teams.RFRMGR_TEAMS,
            TeamSeasons.RFRMGR_TEAM_SEASONS,
            TeamVenues.RFRMGR_TEAM_VENUES,
            Tournaments.RFRMGR_TOURNAMENTS,
            TournamentGames.RFRMGR_TOURNAMENT_GAMES,
            TournamentVenues.RFRMGR_TOURNAMENT_VENUES,
            TrainingLevels.RFRMGR_TRAINING_LEVELS,
            TrainingLevelTypes.RFRMGR_TRAINING_LEVEL_TYPES,
            TrainingUpdates.RFRMGR_TRAINING_UPDATES,
            Urls.RFRMGR_URLS,
            Users.RFRMGR_USERS,
            UserRoles.RFRMGR_USER_ROLES,
            Wishes.RFRMGR_WISHES,
            WishTypes.RFRMGR_WISH_TYPES);
    }
}
