/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables.records;


import de.edgesoft.refereemanager.jooq.tables.Seasons;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * All seasons.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonsRecord extends UpdatableRecordImpl<SeasonsRecord> implements Record5<UInteger, Date, String, Byte, String> {

    private static final long serialVersionUID = 570107214;

    /**
     * Setter for <code>refereemanager.rfrmgr_seasons.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_seasons.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_seasons.year_start</code>.
     */
    public void setYearStart(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_seasons.year_start</code>.
     */
    public Date getYearStart() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_seasons.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_seasons.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_seasons.editor_only</code>.
     */
    public void setEditorOnly(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_seasons.editor_only</code>.
     */
    public Byte getEditorOnly() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_seasons.remark</code>.
     */
    public void setRemark(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_seasons.remark</code>.
     */
    public String getRemark() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UInteger, Date, String, Byte, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UInteger, Date, String, Byte, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Seasons.SEASONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return Seasons.SEASONS.YEAR_START;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Seasons.SEASONS.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Seasons.SEASONS.EDITOR_ONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Seasons.SEASONS.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getYearStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getEditorOnly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeasonsRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeasonsRecord value2(Date value) {
        setYearStart(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeasonsRecord value3(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeasonsRecord value4(Byte value) {
        setEditorOnly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeasonsRecord value5(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeasonsRecord values(UInteger value1, Date value2, String value3, Byte value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SeasonsRecord
     */
    public SeasonsRecord() {
        super(Seasons.SEASONS);
    }

    /**
     * Create a detached, initialised SeasonsRecord
     */
    public SeasonsRecord(UInteger id, Date yearStart, String title, Byte editorOnly, String remark) {
        super(Seasons.SEASONS);

        set(0, id);
        set(1, yearStart);
        set(2, title);
        set(3, editorOnly);
        set(4, remark);
    }
}
