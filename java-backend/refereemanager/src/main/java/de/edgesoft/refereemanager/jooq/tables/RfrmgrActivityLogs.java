/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.RfrmgrActivityLogsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Activity log of selected data tables. Only those tables are  / * comment 
 * truncated * / / *logged that are important to the user.* /
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RfrmgrActivityLogs extends TableImpl<RfrmgrActivityLogsRecord> {

    private static final long serialVersionUID = 109079056;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_activity_logs</code>
     */
    public static final RfrmgrActivityLogs RFRMGR_ACTIVITY_LOGS = new RfrmgrActivityLogs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RfrmgrActivityLogsRecord> getRecordType() {
        return RfrmgrActivityLogsRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.id</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.database_table_id</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, UInteger> DATABASE_TABLE_ID = createField("database_table_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.database_column_id</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, UInteger> DATABASE_COLUMN_ID = createField("database_column_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.row_id</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, Integer> ROW_ID = createField("row_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.old_value</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, String> OLD_VALUE = createField("old_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.new_value</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, String> NEW_VALUE = createField("new_value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.user_id</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "\n");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.remark</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_activity_logs.created</code>.
     */
    public final TableField<RfrmgrActivityLogsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_activity_logs</code> table reference
     */
    public RfrmgrActivityLogs() {
        this("rfrmgr_activity_logs", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_activity_logs</code> table reference
     */
    public RfrmgrActivityLogs(String alias) {
        this(alias, RFRMGR_ACTIVITY_LOGS);
    }

    private RfrmgrActivityLogs(String alias, Table<RfrmgrActivityLogsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RfrmgrActivityLogs(String alias, Table<RfrmgrActivityLogsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Activity log of selected data tables. Only those tables are  /* comment truncated */ /*logged that are important to the user.*/");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RfrmgrActivityLogsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFRMGR_ACTIVITY_LOGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RfrmgrActivityLogsRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_ACTIVITY_LOGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RfrmgrActivityLogsRecord>> getKeys() {
        return Arrays.<UniqueKey<RfrmgrActivityLogsRecord>>asList(Keys.KEY_RFRMGR_ACTIVITY_LOGS_PRIMARY, Keys.KEY_RFRMGR_ACTIVITY_LOGS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RfrmgrActivityLogs as(String alias) {
        return new RfrmgrActivityLogs(alias, this);
    }

    /**
     * Rename this table
     */
    public RfrmgrActivityLogs rename(String name) {
        return new RfrmgrActivityLogs(name, null);
    }
}
