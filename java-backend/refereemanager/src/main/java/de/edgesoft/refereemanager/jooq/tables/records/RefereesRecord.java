/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables.records;


import de.edgesoft.refereemanager.jooq.tables.Referees;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * Storage of all referees.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefereesRecord extends UpdatableRecordImpl<RefereesRecord> implements Record3<UInteger, UInteger, Byte> {

    private static final long serialVersionUID = 502438022;

    /**
     * Setter for <code>refereemanager.rfrmgr_referees.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_referees.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_referees.person_id</code>.
     */
    public void setPersonId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_referees.person_id</code>.
     */
    public UInteger getPersonId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_referees.docs_per_letter</code>.
     */
    public void setDocsPerLetter(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_referees.docs_per_letter</code>.
     */
    public Byte getDocsPerLetter() {
        return (Byte) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, Byte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, Byte> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Referees.RFRMGR_REFEREES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Referees.RFRMGR_REFEREES.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return Referees.RFRMGR_REFEREES.DOCS_PER_LETTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getDocsPerLetter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefereesRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefereesRecord value2(UInteger value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefereesRecord value3(Byte value) {
        setDocsPerLetter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RefereesRecord values(UInteger value1, UInteger value2, Byte value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefereesRecord
     */
    public RefereesRecord() {
        super(Referees.RFRMGR_REFEREES);
    }

    /**
     * Create a detached, initialised RefereesRecord
     */
    public RefereesRecord(UInteger id, UInteger personId, Byte docsPerLetter) {
        super(Referees.RFRMGR_REFEREES);

        set(0, id);
        set(1, personId);
        set(2, docsPerLetter);
    }
}
