/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.UrlsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * All urls.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Urls extends TableImpl<UrlsRecord> {

    private static final long serialVersionUID = 1572953759;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_urls</code>
     */
    public static final Urls URLS = new Urls();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UrlsRecord> getRecordType() {
        return UrlsRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_urls.id</code>.
     */
    public final TableField<UrlsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_urls.contact_id</code>.
     */
    public final TableField<UrlsRecord, UInteger> CONTACT_ID = createField("contact_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_urls.url</code>.
     */
    public final TableField<UrlsRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_urls</code> table reference
     */
    public Urls() {
        this("rfrmgr_urls", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_urls</code> table reference
     */
    public Urls(String alias) {
        this(alias, URLS);
    }

    private Urls(String alias, Table<UrlsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Urls(String alias, Table<UrlsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "All urls.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UrlsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_URLS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UrlsRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_URLS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UrlsRecord>> getKeys() {
        return Arrays.<UniqueKey<UrlsRecord>>asList(Keys.KEY_RFRMGR_URLS_PRIMARY, Keys.KEY_RFRMGR_URLS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Urls as(String alias) {
        return new Urls(alias, this);
    }

    /**
     * Rename this table
     */
    public Urls rename(String name) {
        return new Urls(name, null);
    }
}
