/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.RfrmgrTournamentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Tournaments with games.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RfrmgrTournaments extends TableImpl<RfrmgrTournamentsRecord> {

    private static final long serialVersionUID = 630741162;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_tournaments</code>
     */
    public static final RfrmgrTournaments RFRMGR_TOURNAMENTS = new RfrmgrTournaments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RfrmgrTournamentsRecord> getRecordType() {
        return RfrmgrTournamentsRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.id</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.name</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.start</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, Timestamp> START = createField("start", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.end</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, Timestamp> END = createField("end", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.announcement_url</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, String> ANNOUNCEMENT_URL = createField("announcement_url", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.information_url</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, String> INFORMATION_URL = createField("information_url", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.club_id</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, UInteger> CLUB_ID = createField("club_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.person_id</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, UInteger> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_tournaments.remark</code>.
     */
    public final TableField<RfrmgrTournamentsRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_tournaments</code> table reference
     */
    public RfrmgrTournaments() {
        this("rfrmgr_tournaments", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_tournaments</code> table reference
     */
    public RfrmgrTournaments(String alias) {
        this(alias, RFRMGR_TOURNAMENTS);
    }

    private RfrmgrTournaments(String alias, Table<RfrmgrTournamentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RfrmgrTournaments(String alias, Table<RfrmgrTournamentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Tournaments with games.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RfrmgrTournamentsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFRMGR_TOURNAMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RfrmgrTournamentsRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_TOURNAMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RfrmgrTournamentsRecord>> getKeys() {
        return Arrays.<UniqueKey<RfrmgrTournamentsRecord>>asList(Keys.KEY_RFRMGR_TOURNAMENTS_PRIMARY, Keys.KEY_RFRMGR_TOURNAMENTS_ID_UNIQUE, Keys.KEY_RFRMGR_TOURNAMENTS_ABBREVIATION_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RfrmgrTournaments as(String alias) {
        return new RfrmgrTournaments(alias, this);
    }

    /**
     * Rename this table
     */
    public RfrmgrTournaments rename(String name) {
        return new RfrmgrTournaments(name, null);
    }
}
