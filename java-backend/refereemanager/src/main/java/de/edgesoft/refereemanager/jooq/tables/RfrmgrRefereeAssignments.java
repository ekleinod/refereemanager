/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.RfrmgrRefereeAssignmentsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Referee's assignments with their role.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RfrmgrRefereeAssignments extends TableImpl<RfrmgrRefereeAssignmentsRecord> {

    private static final long serialVersionUID = 508187597;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_referee_assignments</code>
     */
    public static final RfrmgrRefereeAssignments RFRMGR_REFEREE_ASSIGNMENTS = new RfrmgrRefereeAssignments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RfrmgrRefereeAssignmentsRecord> getRecordType() {
        return RfrmgrRefereeAssignmentsRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.id</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.assignment_id</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, UInteger> ASSIGNMENT_ID = createField("assignment_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.referee_assignment_type_id</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, UInteger> REFEREE_ASSIGNMENT_TYPE_ID = createField("referee_assignment_type_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.referee_id</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, UInteger> REFEREE_ID = createField("referee_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.referee_assignment_status_type_id</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, UInteger> REFEREE_ASSIGNMENT_STATUS_TYPE_ID = createField("referee_assignment_status_type_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.referee_assignment_remark_type_id</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, UInteger> REFEREE_ASSIGNMENT_REMARK_TYPE_ID = createField("referee_assignment_remark_type_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_referee_assignments.remark</code>.
     */
    public final TableField<RfrmgrRefereeAssignmentsRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_referee_assignments</code> table reference
     */
    public RfrmgrRefereeAssignments() {
        this("rfrmgr_referee_assignments", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_referee_assignments</code> table reference
     */
    public RfrmgrRefereeAssignments(String alias) {
        this(alias, RFRMGR_REFEREE_ASSIGNMENTS);
    }

    private RfrmgrRefereeAssignments(String alias, Table<RfrmgrRefereeAssignmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RfrmgrRefereeAssignments(String alias, Table<RfrmgrRefereeAssignmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Referee's assignments with their role.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RfrmgrRefereeAssignmentsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFRMGR_REFEREE_ASSIGNMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RfrmgrRefereeAssignmentsRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_REFEREE_ASSIGNMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RfrmgrRefereeAssignmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<RfrmgrRefereeAssignmentsRecord>>asList(Keys.KEY_RFRMGR_REFEREE_ASSIGNMENTS_PRIMARY, Keys.KEY_RFRMGR_REFEREE_ASSIGNMENTS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RfrmgrRefereeAssignments as(String alias) {
        return new RfrmgrRefereeAssignments(alias, this);
    }

    /**
     * Rename this table
     */
    public RfrmgrRefereeAssignments rename(String name) {
        return new RfrmgrRefereeAssignments(name, null);
    }
}
