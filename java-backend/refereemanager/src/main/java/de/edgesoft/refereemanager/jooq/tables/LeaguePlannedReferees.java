/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.LeaguePlannedRefereesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Planned numbers of referees by assignment type.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaguePlannedReferees extends TableImpl<LeaguePlannedRefereesRecord> {

    private static final long serialVersionUID = -1339743911;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_league_planned_referees</code>
     */
    public static final LeaguePlannedReferees LEAGUE_PLANNED_REFEREES = new LeaguePlannedReferees();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeaguePlannedRefereesRecord> getRecordType() {
        return LeaguePlannedRefereesRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_league_planned_referees.id</code>.
     */
    public final TableField<LeaguePlannedRefereesRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_league_planned_referees.league_id</code>.
     */
    public final TableField<LeaguePlannedRefereesRecord, UInteger> LEAGUE_ID = createField("league_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_league_planned_referees.season_id</code>.
     */
    public final TableField<LeaguePlannedRefereesRecord, UInteger> SEASON_ID = createField("season_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_league_planned_referees.referee_assignment_type_id</code>.
     */
    public final TableField<LeaguePlannedRefereesRecord, UInteger> REFEREE_ASSIGNMENT_TYPE_ID = createField("referee_assignment_type_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_league_planned_referees.quantity</code>.
     */
    public final TableField<LeaguePlannedRefereesRecord, UInteger> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_league_planned_referees</code> table reference
     */
    public LeaguePlannedReferees() {
        this("rfrmgr_league_planned_referees", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_league_planned_referees</code> table reference
     */
    public LeaguePlannedReferees(String alias) {
        this(alias, LEAGUE_PLANNED_REFEREES);
    }

    private LeaguePlannedReferees(String alias, Table<LeaguePlannedRefereesRecord> aliased) {
        this(alias, aliased, null);
    }

    private LeaguePlannedReferees(String alias, Table<LeaguePlannedRefereesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Planned numbers of referees by assignment type.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LeaguePlannedRefereesRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_LEAGUE_PLANNED_REFEREES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LeaguePlannedRefereesRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_LEAGUE_PLANNED_REFEREES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LeaguePlannedRefereesRecord>> getKeys() {
        return Arrays.<UniqueKey<LeaguePlannedRefereesRecord>>asList(Keys.KEY_RFRMGR_LEAGUE_PLANNED_REFEREES_PRIMARY, Keys.KEY_RFRMGR_LEAGUE_PLANNED_REFEREES_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LeaguePlannedReferees as(String alias) {
        return new LeaguePlannedReferees(alias, this);
    }

    /**
     * Rename this table
     */
    public LeaguePlannedReferees rename(String name) {
        return new LeaguePlannedReferees(name, null);
    }
}
