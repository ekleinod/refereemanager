/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables.records;


import de.edgesoft.refereemanager.jooq.tables.Assignments;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * Assignments.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssignmentsRecord extends UpdatableRecordImpl<AssignmentsRecord> implements Record4<UInteger, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = 180977687;

    /**
     * Setter for <code>refereemanager.rfrmgr_assignments.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_assignments.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_assignments.start</code>.
     */
    public void setStart(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_assignments.start</code>.
     */
    public Timestamp getStart() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_assignments.end</code>.
     */
    public void setEnd(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_assignments.end</code>.
     */
    public Timestamp getEnd() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_assignments.remark</code>.
     */
    public void setRemark(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_assignments.remark</code>.
     */
    public String getRemark() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, Timestamp, Timestamp, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, Timestamp, Timestamp, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Assignments.RFRMGR_ASSIGNMENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Assignments.RFRMGR_ASSIGNMENTS.START;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Assignments.RFRMGR_ASSIGNMENTS.END;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Assignments.RFRMGR_ASSIGNMENTS.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getStart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getEnd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentsRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentsRecord value2(Timestamp value) {
        setStart(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentsRecord value3(Timestamp value) {
        setEnd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentsRecord value4(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssignmentsRecord values(UInteger value1, Timestamp value2, Timestamp value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssignmentsRecord
     */
    public AssignmentsRecord() {
        super(Assignments.RFRMGR_ASSIGNMENTS);
    }

    /**
     * Create a detached, initialised AssignmentsRecord
     */
    public AssignmentsRecord(UInteger id, Timestamp start, Timestamp end, String remark) {
        super(Assignments.RFRMGR_ASSIGNMENTS);

        set(0, id);
        set(1, start);
        set(2, end);
        set(3, remark);
    }
}
