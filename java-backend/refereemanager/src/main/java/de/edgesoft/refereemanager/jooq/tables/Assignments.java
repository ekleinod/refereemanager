/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.AssignmentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Assignments.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Assignments extends TableImpl<AssignmentsRecord> {

    private static final long serialVersionUID = 856016965;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_assignments</code>
     */
    public static final Assignments RFRMGR_ASSIGNMENTS = new Assignments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssignmentsRecord> getRecordType() {
        return AssignmentsRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_assignments.id</code>.
     */
    public final TableField<AssignmentsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_assignments.start</code>.
     */
    public final TableField<AssignmentsRecord, Timestamp> START = createField("start", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_assignments.end</code>.
     */
    public final TableField<AssignmentsRecord, Timestamp> END = createField("end", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_assignments.remark</code>.
     */
    public final TableField<AssignmentsRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_assignments</code> table reference
     */
    public Assignments() {
        this("rfrmgr_assignments", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_assignments</code> table reference
     */
    public Assignments(String alias) {
        this(alias, RFRMGR_ASSIGNMENTS);
    }

    private Assignments(String alias, Table<AssignmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Assignments(String alias, Table<AssignmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Assignments.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssignmentsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFRMGR_ASSIGNMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssignmentsRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_ASSIGNMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssignmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<AssignmentsRecord>>asList(Keys.KEY_RFRMGR_ASSIGNMENTS_PRIMARY, Keys.KEY_RFRMGR_ASSIGNMENTS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Assignments as(String alias) {
        return new Assignments(alias, this);
    }

    /**
     * Rename this table
     */
    public Assignments rename(String name) {
        return new Assignments(name, null);
    }
}
