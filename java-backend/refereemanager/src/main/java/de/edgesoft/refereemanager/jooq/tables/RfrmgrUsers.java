/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.RfrmgrUsersRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * User table for access rights.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RfrmgrUsers extends TableImpl<RfrmgrUsersRecord> {

    private static final long serialVersionUID = -1493565033;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_users</code>
     */
    public static final RfrmgrUsers RFRMGR_USERS = new RfrmgrUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RfrmgrUsersRecord> getRecordType() {
        return RfrmgrUsersRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_users.id</code>.
     */
    public final TableField<RfrmgrUsersRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.username</code>.
     */
    public final TableField<RfrmgrUsersRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.password</code>.
     */
    public final TableField<RfrmgrUsersRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.salt</code>.
     */
    public final TableField<RfrmgrUsersRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.user_role_id</code>.
     */
    public final TableField<RfrmgrUsersRecord, Integer> USER_ROLE_ID = createField("user_role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.person_id</code>.
     */
    public final TableField<RfrmgrUsersRecord, Integer> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.created</code>.
     */
    public final TableField<RfrmgrUsersRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_users.modified</code>.
     */
    public final TableField<RfrmgrUsersRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_users</code> table reference
     */
    public RfrmgrUsers() {
        this("rfrmgr_users", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_users</code> table reference
     */
    public RfrmgrUsers(String alias) {
        this(alias, RFRMGR_USERS);
    }

    private RfrmgrUsers(String alias, Table<RfrmgrUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private RfrmgrUsers(String alias, Table<RfrmgrUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "User table for access rights.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RfrmgrUsersRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFRMGR_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RfrmgrUsersRecord> getPrimaryKey() {
        return Keys.KEY_RFRMGR_USERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RfrmgrUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<RfrmgrUsersRecord>>asList(Keys.KEY_RFRMGR_USERS_PRIMARY, Keys.KEY_RFRMGR_USERS_ID_UNIQUE, Keys.KEY_RFRMGR_USERS_USERNAME_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RfrmgrUsers as(String alias) {
        return new RfrmgrUsers(alias, this);
    }

    /**
     * Rename this table
     */
    public RfrmgrUsers rename(String name) {
        return new RfrmgrUsers(name, null);
    }
}
