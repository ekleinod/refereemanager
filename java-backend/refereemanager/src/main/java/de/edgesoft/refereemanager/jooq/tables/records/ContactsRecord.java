/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables.records;


import de.edgesoft.refereemanager.jooq.tables.Contacts;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * Base table for contacts. Specialized to email, phone etc.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactsRecord extends UpdatableRecordImpl<ContactsRecord> implements Record8<UInteger, UInteger, String, Byte, Byte, UInteger, UInteger, String> {

    private static final long serialVersionUID = -109490496;

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.contact_type_id</code>.
     */
    public void setContactTypeId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.contact_type_id</code>.
     */
    public UInteger getContactTypeId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.is_primary</code>.
     */
    public void setIsPrimary(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.is_primary</code>.
     */
    public Byte getIsPrimary() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.editor_only</code>.
     */
    public void setEditorOnly(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.editor_only</code>.
     */
    public Byte getEditorOnly() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.person_id</code>.
     */
    public void setPersonId(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.person_id</code>.
     */
    public UInteger getPersonId() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.club_id</code>.
     */
    public void setClubId(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.club_id</code>.
     */
    public UInteger getClubId() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>refereemanager.rfrmgr_contacts.remark</code>.
     */
    public void setRemark(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>refereemanager.rfrmgr_contacts.remark</code>.
     */
    public String getRemark() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UInteger, UInteger, String, Byte, Byte, UInteger, UInteger, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UInteger, UInteger, String, Byte, Byte, UInteger, UInteger, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Contacts.RFRMGR_CONTACTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Contacts.RFRMGR_CONTACTS.CONTACT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Contacts.RFRMGR_CONTACTS.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Contacts.RFRMGR_CONTACTS.IS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return Contacts.RFRMGR_CONTACTS.EDITOR_ONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field6() {
        return Contacts.RFRMGR_CONTACTS.PERSON_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field7() {
        return Contacts.RFRMGR_CONTACTS.CLUB_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Contacts.RFRMGR_CONTACTS.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getContactTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getIsPrimary();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getEditorOnly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value6() {
        return getPersonId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value7() {
        return getClubId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value2(UInteger value) {
        setContactTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value3(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value4(Byte value) {
        setIsPrimary(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value5(Byte value) {
        setEditorOnly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value6(UInteger value) {
        setPersonId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value7(UInteger value) {
        setClubId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord value8(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactsRecord values(UInteger value1, UInteger value2, String value3, Byte value4, Byte value5, UInteger value6, UInteger value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContactsRecord
     */
    public ContactsRecord() {
        super(Contacts.RFRMGR_CONTACTS);
    }

    /**
     * Create a detached, initialised ContactsRecord
     */
    public ContactsRecord(UInteger id, UInteger contactTypeId, String title, Byte isPrimary, Byte editorOnly, UInteger personId, UInteger clubId, String remark) {
        super(Contacts.RFRMGR_CONTACTS);

        set(0, id);
        set(1, contactTypeId);
        set(2, title);
        set(3, isPrimary);
        set(4, editorOnly);
        set(5, personId);
        set(6, clubId);
        set(7, remark);
    }
}
