/**
 * This class is generated by jOOQ
 */
package de.edgesoft.refereemanager.jooq.tables;


import de.edgesoft.refereemanager.jooq.Keys;
import de.edgesoft.refereemanager.jooq.Refereemanager;
import de.edgesoft.refereemanager.jooq.tables.records.PeopleRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Alle people go here, specializations, such as referees, have / * comment 
 * truncated * / / * their own table.* /
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class People extends TableImpl<PeopleRecord> {

    private static final long serialVersionUID = 1349991976;

    /**
     * The reference instance of <code>refereemanager.rfrmgr_people</code>
     */
    public static final People RFRMGR_PEOPLE = new People();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PeopleRecord> getRecordType() {
        return PeopleRecord.class;
    }

    /**
     * The column <code>refereemanager.rfrmgr_people.id</code>.
     */
    public final TableField<PeopleRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.sex_type_id</code>.
     */
    public final TableField<PeopleRecord, UInteger> SEX_TYPE_ID = createField("sex_type_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.title</code>.
     */
    public final TableField<PeopleRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.first_name</code>.
     */
    public final TableField<PeopleRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.name</code>.
     */
    public final TableField<PeopleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.birthday</code>.
     */
    public final TableField<PeopleRecord, Date> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.dayofdeath</code>.
     */
    public final TableField<PeopleRecord, Date> DAYOFDEATH = createField("dayofdeath", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.remark</code>.
     */
    public final TableField<PeopleRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>refereemanager.rfrmgr_people.internal_remark</code>.
     */
    public final TableField<PeopleRecord, String> INTERNAL_REMARK = createField("internal_remark", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>refereemanager.rfrmgr_people</code> table reference
     */
    public People() {
        this("rfrmgr_people", null);
    }

    /**
     * Create an aliased <code>refereemanager.rfrmgr_people</code> table reference
     */
    public People(String alias) {
        this(alias, RFRMGR_PEOPLE);
    }

    private People(String alias, Table<PeopleRecord> aliased) {
        this(alias, aliased, null);
    }

    private People(String alias, Table<PeopleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Alle people go here, specializations, such as referees, have /* comment truncated */ /* their own table.*/");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Refereemanager.REFEREEMANAGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PeopleRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_RFRMGR_PEOPLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PeopleRecord>> getKeys() {
        return Arrays.<UniqueKey<PeopleRecord>>asList(Keys.KEY_RFRMGR_PEOPLE_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public People as(String alias) {
        return new People(alias, this);
    }

    /**
     * Rename this table
     */
    public People rename(String name) {
        return new People(name, null);
    }
}
